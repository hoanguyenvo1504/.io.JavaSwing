/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package doan.java;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hoang Nguyen
 */
public class PanelTimKiemKhachHang extends javax.swing.JPanel {

    private String header[] = {"Tên khách hàng", "Số Điện Thoại", "Giới tính", "Địa Chỉ", "Email", "Loại khách hàng"};
    private DefaultTableModel tblModel = new DefaultTableModel(header, 0);

    /**
     * Creates new form TimKiemPanel
     */
    public PanelTimKiemKhachHang() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_timkiem = new javax.swing.JTextField();
        cb_timkiempanel_phanloai = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        btn_tim = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_timkiempanel = new javax.swing.JTable();

        setBackground(new java.awt.Color(153, 204, 255));

        cb_timkiempanel_phanloai.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        cb_timkiempanel_phanloai.setForeground(new java.awt.Color(0, 51, 153));
        cb_timkiempanel_phanloai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Số điện thoại", "Tên khách hàng", "Địa chỉ", "Loại khách hàng" }));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 102));
        jLabel1.setText("Tìm kiếm khách hàng:");

        btn_tim.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btn_tim.setForeground(new java.awt.Color(0, 51, 153));
        btn_tim.setText("Tìm");
        btn_tim.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timActionPerformed(evt);
            }
        });

        tb_timkiempanel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Họ tên", "Số điện thoại", "Địa chỉ", "Email", "Công Việc", "Giới Tính"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_timkiempanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_timkiempanelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_timkiempanel);
        if (tb_timkiempanel.getColumnModel().getColumnCount() > 0) {
            tb_timkiempanel.getColumnModel().getColumn(5).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1)
                        .addGap(36, 36, 36)
                        .addComponent(txt_timkiem, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(cb_timkiempanel_phanloai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_tim, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(118, 118, 118))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(68, 68, 68)
                        .addComponent(btn_tim, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cb_timkiempanel_phanloai, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addComponent(jLabel1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void selectDataFromDanhBa(String sql) {
        try {
            Connection connection = new dbconnection().connectionDB();
            if (connection == null) {
                JOptionPane.showMessageDialog(this, "Error connect to database", "Message", JOptionPane.INFORMATION_MESSAGE);
            }

            Statement st = connection.createStatement();

            System.out.println(sql);

            ResultSet rs = st.executeQuery(sql);

            if (rs.isBeforeFirst() == false) {
                JOptionPane.showMessageDialog(this, "Not Data!", "Message", JOptionPane.INFORMATION_MESSAGE);
                return;
            }
            tblModel = new DefaultTableModel(header, 0);
            Vector data = null;
            while (rs.next()) {
                data = new Vector();
                data.add(rs.getString("tenkhachhang"));
                data.add(rs.getString("sdtkhachhang"));
                data.add(rs.getString("gioitinh"));
                data.add(rs.getString("diachi"));
                data.add(rs.getString("email"));
                data.add(rs.getString("loaikhachhang"));
                tblModel.addRow(data);
            }
            tb_timkiempanel.setModel(tblModel);
            connection.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Not Found!", "Message", JOptionPane.INFORMATION_MESSAGE);
            e.printStackTrace();
        }
    }

   

    private void btn_timActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timActionPerformed
        if (cb_timkiempanel_phanloai.getSelectedItem().toString().equals("Số điện thoại")) {
            String sql = "SELECT * FROM khachhang WHERE sdtkhachhang LIKE '%" + txt_timkiem.getText() + "%'";
            this.selectDataFromDanhBa(sql);

        } else if (cb_timkiempanel_phanloai.getSelectedItem().toString().equals("Tên khách hàng")) {
            String sql = "SELECT * FROM khachhang WHERE tenkhachhang LIKE '%" + txt_timkiem.getText() + "%'";
            this.selectDataFromDanhBa(sql);
        } else if (cb_timkiempanel_phanloai.getSelectedItem().toString().equals("Địa chỉ")) {
            String sql = "SELECT * FROM khachhang WHERE diachi LIKE '%" + txt_timkiem.getText() + "%'";
            this.selectDataFromDanhBa(sql);
        }else if (cb_timkiempanel_phanloai.getSelectedItem().toString().equals("Loại khách hàng")) {
            String sql = "SELECT * FROM khachhang WHERE loaikhachhang LIKE '%" + txt_timkiem.getText() + "%'";
            this.selectDataFromDanhBa(sql);
        }
        
    }//GEN-LAST:event_btn_timActionPerformed

    private void tb_timkiempanelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_timkiempanelMouseClicked
        txt_timkiem.setText(tb_timkiempanel.getValueAt(tb_timkiempanel.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tb_timkiempanelMouseClicked

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_tim;
    private javax.swing.JComboBox<String> cb_timkiempanel_phanloai;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_timkiempanel;
    private javax.swing.JTextField txt_timkiem;
    // End of variables declaration//GEN-END:variables
}
